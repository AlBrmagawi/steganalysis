{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"StegAnalysis","text":"<p>StegAnalys is a powerful tool for steganalysis, capable of extracting hidden data in various types of files using several techniques. It uses multiple open-source tools such as <code>stegsolve</code>, <code>steghide</code>, <code>zsteg</code>, <code>foremost</code>, and <code>binwalk</code> to efficiently uncover concealed information.</p> <p>It is particularly useful in forensic data recovery, digital investigations, and cybersecurity assessments, enabling users to scan and analyze files for hidden data.</p> <p>Explore more about each function and the tool it implements:</p> <ul> <li>run_stegsolve</li> <li>run_steghide</li> <li>run_zsteg</li> <li>run_foremost</li> <li>run_binwalk</li> <li>main function</li> </ul> <p>The tool also contains a main function that sequentially runs all these tool-enabled functions on an input file, providing a comprehensive steganalysis report.</p> <p>Feel free to delve into each provided link to get a more detailed insight into each function and the tool it uses.</p> <p>To get started with StegAnalysis, please follow our Installation Guide and refer to our Usage Guide to learn how to use StegAnalysis effectively.</p>"},{"location":"installation/","title":"Installation","text":"<p>In this guide, we'll demonstrate how to install and set up the tool.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Ensure that you have the following installed:</p> <ul> <li>Python (version 3.8 or later is recommended): You can download it from Python's official website. </li> <li>Pip: It should come pre-installed with Python 3.4 or later.</li> </ul>"},{"location":"installation/#installation-steps","title":"Installation Steps","text":"<ol> <li>Clone the repository from GitHub.</li> </ol> <pre><code>git clone {GitHub repository URL}\n</code></pre> <p>Navigate into the cloned repository.</p> <pre><code>cd {Repository name}\n</code></pre>"},{"location":"installation/#verifying-the-installation","title":"Verifying the Installation","text":"<p>To verify that the tool has been installed correctly:</p> <p>Run this command:</p> <pre><code>python script.py --help\n</code></pre> <p>You should see the help menu displayed, confirming that your installation is successful.</p>"},{"location":"installation/#wrapping-up","title":"Wrapping Up","text":"<p>Now your tool is ready for use. You can navigate to <code>usage.md</code> for a guide on how to use this tool.</p>"},{"location":"usage/","title":"Usage","text":"<p>In the context of this guide, let's assume that the project root directory is where you have installed/cloned this tool.</p>"},{"location":"usage/#preparing-the-environment","title":"Preparing the Environment","text":"<p>Before you start, ensure that you have installed all the necessary dependencies (Python version, additional packages, etc.), mentioned in the <code>installation.md</code>.</p>"},{"location":"usage/#running-the-tool","title":"Running the Tool","text":"<p>The tool can be accessed from the command line. Here we'll guide you on how to use it.</p> <ol> <li> <p>Navigate to the project root directory.</p> </li> <li> <p>Run the main script with the file you want to analyze:</p> </li> </ol> <pre><code>python script.py -f path_to_your_file\n</code></pre> <p>(Replace <code>path_to_your_file</code> with the path to the file that you want to analyze).</p>"},{"location":"usage/#understanding-the-output","title":"Understanding the Output","text":"<p>Once you've run the command, the tool will start the analysis and will print the output to the command line. The output will include the analysis results obtained from each of the integrated utilities (_stegsolve, _steghide, _zsteg, _foremost, _binwalk).</p> <p>If the tool is able to uncover any hidden information within the file, it will display that information in the output, and write the results to the output directory as stated by the tool.</p> <p>Also, make sure the tool has necessary permissions to read the file and write the output.</p>"},{"location":"steganalysis/main/","title":"Main Function","text":"<p>All these functions run the corresponding tool on a provided file and handle the output in different ways depending on the specific tool and function. They provide a series of different methods for scanning and analyzing files for hidden data \u2014 an important process in digital forensic investigations and cybersecurity assessments.</p> <p>This is the main function that takes an input PDF file. It extracts images, performs steganalysis, finds all images in the current directory, processes each one, fetches all WAV files, runs <code>stegwav</code> for each, followed by white space steganography detection. Additionally, it plots entropy changes, delays for 2 seconds, then prints the directory tree.</p>"},{"location":"steganalysis/run_binwalk/","title":"<code>run_binwalk</code> Function","text":"<p>The binwalk tool is invoked here, a tool for searching binary files like images and audio files for embedded files and executable code.</p> <p>This function checks for <code>binwalk</code> in the PATH and if not found, logs an error message and suggests the installation command. If <code>binwalk</code> exists, runs <code>binwalk</code> on the given file path, the tool stores the output.</p>"},{"location":"steganalysis/run_foremost/","title":"<code>run_foremost</code> Function","text":"<p>It uses the foremost tool. Foremost is a forensic data recovery program, useful for extracting files based on their headers, footers, and internal data structures. This process is known as 'file carving'. It was developed by the members of the United States Air Force Office of Special Investigations.</p> <p>This function located <code>foremost</code> in the PATH. If it doesn't exist it logs an error message and recommends the installation command. If <code>foremost</code> exists, it runs <code>foremost</code> on the given file path, storing the output in a specified directory.</p>"},{"location":"steganalysis/run_steghide/","title":"<code>run_steghide</code> Function","text":"<p>This tool makes use of the steghide command, a steganography tool which hides, in an undetectable manner, data within various types of files. In particular, it embeds data within the least significant bits of images and audio files without causing noticeable changes or distortions.</p> <p>This function checks for <code>steghide</code> in the PATH. If not found, it logs an error message and ends. If exists, runs <code>steghide</code> on the provided image path to extract hidden information. The result is stored.</p>"},{"location":"steganalysis/run_stegsolve/","title":"<code>run_stegsolve</code> Function","text":"<p>Stegsolve is an open-source tool often used for steganalysis, particularly in the field of CTF (Capture The Flag) challenges. It works by applying various manipulations to images (like image bit planes) to reveal hidden content.</p> <p>This function searches for <code>stegsolve</code> in the PATH. If it doesn't exist, it logs an error message and ends. If <code>stegsolve</code> exists, it's used to run Stegsolve on the given image path and the result is stored.</p>"},{"location":"steganalysis/run_zsteg/","title":"<code>run_zsteg</code> Function","text":"<p>Zsteg is a tool designed to detect LSB steganography in PNG and BMP files, an often employed method to hide secret data in the least significant bits of pixel values.</p> <p>The function checks if <code>zsteg</code> is in the PATH. If it doesn't, logs an error and suggests installation command. If <code>zsteg</code> exists, runs <code>zsteg</code> on the provided image path and stores the output.</p>"}]}